<UserControl x:Class="YuanliCore.Views.VirtualCanvas"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:YuanliCore.Views"
       
             xmlns:metroIcon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:material ="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:canvas="clr-namespace:YuanliCore.Views.CanvasShapes"
             mc:Ignorable="d"
             x:Name="MainGrid"
             d:DesignHeight="300" d:DesignWidth="300" BorderBrush="SkyBlue" BorderThickness="1" Loaded="MainGrid_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Focusable" Value="False"/>
            </Style>
            <Style TargetType="material:PackIcon">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Margin" Value="-14,-14"/>
                <Setter Property="Foreground" Value="DarkBlue"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Name="TextblockStyle">
                <Setter Property="FontSize" Value="8"/>
                <Setter Property="Foreground" Value="DarkBlue"/>
            </Style>
            <local:VisibilityConvert x:Key="VisibilityConvert"/>
            <local:InverseVisibilityConvert x:Key="InverseVisibilityConvert"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Green.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid DataContext="{Binding ElementName=MainGrid}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border BorderBrush="SkyBlue" Background="AliceBlue" BorderThickness="0,0,0,1" Height="30" Visibility="{Binding IsShowBar, Converter={StaticResource VisibilityConvert}}"   >
            <UniformGrid Columns="2"  >
                <StackPanel Orientation="Horizontal" Width="auto" >
                    <Button Content="{material:PackIcon Kind=ArrowExpandAll}" Command="{Binding ZoomFitCommand}"/>
                    <Button Content="{material:PackIcon Kind=BorderInside}" Command="{Binding CenterlineCommand}"/>
                    <!--<Button Content="{material:PackIcon Kind=Ruler}" Command="{Binding RulerCommand}"/>-->
                    <Button Content="{material:PackIcon Kind=ContentSave}" Command="{Binding SaveCommand}"/>
                    <!--<Button Content="{material:PackIcon Kind=Clear}" Command="{Binding ClearCommand}" Visibility="{Binding IsShowClear, Converter={StaticResource VisibilityConvert}}"/>-->
                </StackPanel>
                <Viewbox Grid.Row="1" Stretch="Fill">
                    <Grid>
                        <UniformGrid Columns="5" Margin="2" VerticalAlignment="Center" Visibility="{Binding RulerEnabled, Converter={StaticResource InverseVisibilityConvert}}">
                            <TextBlock Text="{Binding MousePixcel.X,StringFormat=X : {0:F2}}" FontSize="10"/>
                            <TextBlock Text="{Binding MousePixcel.Y,StringFormat=Y : {0:F2}}" FontSize="10" Margin="10,0,-8,0"/>
                            <TextBlock Text="{Binding RValue,StringFormat=R : {0:}}" FontSize="10" Margin="24,0,-8,0"/>
                            <TextBlock Text="{Binding GValue,StringFormat=G : {0:}}" FontSize="10" Margin="16,0,0,0"/>
                            <TextBlock Text="{Binding BValue,StringFormat=B : {0:}}" FontSize="10" Margin="8,0,0,0"/>
                        </UniformGrid>
                        <UniformGrid Columns="2" Rows="2" Visibility="{Binding RulerEnabled, Converter={StaticResource VisibilityConvert}}">
                            <UniformGrid Columns="2">
                                <TextBlock Text="{Binding MousePixcel.X,StringFormat=X : {0:F2}}"/>
                                <TextBlock Text="{Binding MousePixcel.Y,StringFormat=Y : {0:F2}}"/>
                            </UniformGrid>
                            <UniformGrid Columns="3">
                                <TextBlock Text="{Binding RValue,StringFormat=R : {0:}}"/>
                                <TextBlock Text="{Binding GValue,StringFormat=G : {0:}}"/>
                                <TextBlock Text="{Binding BValue,StringFormat=B : {0:}}"/>
                            </UniformGrid>
                            <UniformGrid Columns="2">
                                <TextBlock Text="{Binding Distance,StringFormat=L : {0:F2}}"/>
                                <TextBlock Text="{Binding DeltaX,StringFormat=dx : {0:F2}}"/>
                            </UniformGrid>
                            <UniformGrid Columns="2">
                                <TextBlock Text="{Binding DeltaY,StringFormat=dy : {0:F2}}"/>
                                <TextBlock Text="{Binding Theta,StringFormat=Ang : {0:F2}}"/>
                                <!--<TextBlock Foreground="DarkBlue" Text="{Binding ElementName=MainCanvas, Path=Scale,StringFormat=Scale: {0:F2}}"></TextBlock>-->
                            </UniformGrid>
                        </UniformGrid>
                    </Grid>
                </Viewbox>
            </UniformGrid>
        </Border>
        <Grid Grid.Row="1" ClipToBounds="True">
            <canvas:ViewerCanvas x:Name="MainCanvas" MousePixcel="{Binding MousePixcel}" ImageSource="{Binding ImageSource}" ItemsSource="{Binding ItemsSource}" 
                             ControlCenterX="{Binding ControlCenterX}" ControlCenterY="{Binding ControlCenterY}" IsRederHorizontalMirror="{Binding IsRederHorizontalMirror}" 
                             IsRederVerticalMirror="{Binding IsRederVerticalMirror}" RValue="{Binding RValue}" GValue="{Binding GValue}" BValue="{Binding BValue}"
                             Distance="{Binding Distance}" DeltaX="{Binding DeltaX}" DeltaY="{Binding DeltaY}" Theta="{Binding Theta}" RulerEnabled="{Binding RulerEnabled}" 
                             AutoFitParent="{Binding AutoFitParent}" ClipToBounds="True" CanvasMouseDoubleClick="MainCanvas_MouseCanvasDoubleClick">
            </canvas:ViewerCanvas>
        </Grid>
    </Grid>
</UserControl>
